/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        if(head==NULL || head->next==NULL)
        {
            return head;
        }
        ListNode* prev=NULL;
        ListNode* curr=head;
        ListNode* nxt=head;
        int c=0;
        ListNode*dummy=head;
        
        while( dummy!=NULL &&c<k )
        {
            dummy=dummy->next;
            c++;
        }
        if(c<k)
        {
            return head;
        }
        c=0;
        while(curr!=NULL && c<k)
        {
            nxt=curr->next;
            curr->next=prev;
            prev=curr;
            curr=nxt;
   c++;
        }
        if(curr!=NULL)
        {
        head->next= reverseKGroup(curr,k);
        }
        return prev;
    }
};
